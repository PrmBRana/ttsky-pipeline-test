# Makefile
# See https://docs.cocotb.org/en/stable/quickstart.html for more info

# defaults
SIM ?= icarus
TOPLEVEL_LANG ?= verilog
SRC_DIR = $(PWD)/../src
PROJECT_SOURCES = tt_um_prem_pipeline_test.v ALU.v clk.v Control_Unit.v DataMem.v EX_Mux.v EX_stage.v Hazard_Unit.v IF_ID_stage.v imm.v Instruction_Mem.v Mem_stage.v PC_incre.v PCSelect.v pipeline.v Reg_File.v Write_back.v WriteBack_stage.v

ifneq ($(GATES),yes)
  # RTL simulation:
  SIM_BUILD = sim_build/rtl
  VERILOG_SOURCES += $(addprefix $(SRC_DIR)/,$(PROJECT_SOURCES))
else
  # Gate level simulation:
  SIM_BUILD = sim_build/gl
  COMPILE_ARGS += -DGL_TEST
  COMPILE_ARGS += -DFUNCTIONAL
  COMPILE_ARGS += -DUSE_POWER_PINS
  COMPILE_ARGS += -DSIM
  COMPILE_ARGS += -DUNIT_DELAY=\#1
  VERILOG_SOURCES += $(PDK_ROOT)/sky130A/libs.ref/sky130_fd_sc_hd/verilog/primitives.v
  VERILOG_SOURCES += $(PDK_ROOT)/sky130A/libs.ref/sky130_fd_sc_hd/verilog/sky130_fd_sc_hd.v
  VERILOG_SOURCES += $(PWD)/gate_level_netlist.v
endif

# Allow sharing configuration between design and testbench via `include`:
COMPILE_ARGS += -I$(SRC_DIR)

# Include the testbench sources:
VERILOG_SOURCES += $(PWD)/tb.v
TOPLEVEL = tb
MODULE = test  # Explicitly set MODULE to test

# List test modules to run, separated by commas and without the .py suffix:
COCOTB_TEST_MODULES = test

# include cocotb's make rules to take care of the simulator setup
include $(shell cocotb-config --makefiles)/Makefile.sim